openapi: 3.0.3
info:
  title: Robot service 3.0
  description: API сервис управления роботом - пылесосм.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
- url: https://localhost:9669
tags:
- name: User
  description: Контроллер пользователя.
- name: Schedule
  description: Контроллер расписания.
- name: Group
  description: Контроллер группы.
- name: Robot
  description: Контроллер робота.
paths:
  /User:
    post:
      tags:
      - User
      summary: Добавить пользователя
      description: Добавить пользователя в базу
      operationId: add_user
      requestBody:
        description: Создание нового пользователя в базе
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /User/UpdateById/{userId}:
    put:
      tags:
      - User
      summary: Обновить пользвателя
      description: Обновить пользователя в базе
      operationId: update_user
      parameters:
      - name: userId
        in: path
        description: Идентификатор пользователя
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid id supplier
        "404":
          description: User not founde
        "405":
          description: Invalid exception
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /User/findById/{userId}:
    get:
      tags:
      - User
      summary: Поиск пользователя по ID
      description: Поиск пользователя в базе
      operationId: get_user_by_id
      parameters:
      - name: userId
        in: path
        description: Идентификатор пользователя
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /User/deleteById/{userId}:
    delete:
      tags:
      - User
      summary: Удаление пользователя
      description: Удаление пользователя и базы данных
      operationId: delete_user
      parameters:
      - name: userId
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        description: ID пользователя
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid User value
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /Group:
    put:
      tags:
      - Group
      summary: Обновление группы пользователей
      description: Обновить группу пользователей
      operationId: update_group
      requestBody:
        description: Обновление группы
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
        "400":
          description: Invalid ID supplied
        "404":
          description: Group not found
        "405":
          description: Validation exception
      x-openapi-router-controller: swagger_server.controllers.group_controller
    post:
      tags:
      - Group
      summary: Добавление группы
      description: Добавление группы в базу данных
      operationId: add_group
      requestBody:
        description: Добавление группы в базу данных
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.group_controller
  /Group/findById/{groupId}:
    get:
      tags:
      - Group
      summary: Поиск группы по ID
      description: Поиск группы в базе данных
      operationId: get_group_by_id
      parameters:
      - name: groupId
        in: path
        description: Поиск группы
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
        "400":
          description: Invalid ID supplied
        "404":
          description: Group not found
      x-openapi-router-controller: swagger_server.controllers.group_controller
  /Group/deleteById/{groupId}:
    delete:
      tags:
      - Group
      summary: Удаление группы по ID
      description: Удаление группы в базе данных
      operationId: delete_group
      parameters:
      - name: groupId
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: groupId
        in: path
        description: ID - идентификатор группы
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid Group value
      x-openapi-router-controller: swagger_server.controllers.group_controller
  /Robot:
    put:
      tags:
      - Robot
      summary: Обновление робота-пылесоса
      description: Обновление данных о роботе пылесосе в базе данных
      operationId: update_robot
      requestBody:
        description: Обновление данных о роботе пылесосе в базе данных
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Robot'
          application/xml:
            schema:
              $ref: '#/components/schemas/Robot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Robot'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Robot'
            application/xml:
              schema:
                $ref: '#/components/schemas/Robot'
        "400":
          description: Invalid ID supplied
        "404":
          description: Robot not found
        "405":
          description: Validation exception
      x-openapi-router-controller: swagger_server.controllers.robot_controller
    post:
      tags:
      - Robot
      summary: Добавление робота-пылесоса
      description: Добавить робот-пылесос в базу данных
      operationId: add_robot
      requestBody:
        description: Добавить робот-пылесос в базу данных
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Robot'
          application/xml:
            schema:
              $ref: '#/components/schemas/Robot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Robot'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Robot'
            application/xml:
              schema:
                $ref: '#/components/schemas/Robot'
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.robot_controller
  /Robot/robotById/{robotId}:
    get:
      tags:
      - Robot
      summary: Поиск робота-пылесоса по ID
      description: Поиск робота-пылесоса в базе данных
      operationId: get_robot_by_id
      parameters:
      - name: robotId
        in: path
        description: roborID - идентификатор робота-пылесоса
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Robot'
            application/xml:
              schema:
                $ref: '#/components/schemas/Robot'
        "400":
          description: Invalid ID supplied
        "404":
          description: Robot not found
      x-openapi-router-controller: swagger_server.controllers.robot_controller
  /Robot/deleteById/{robotId}:
    delete:
      tags:
      - Robot
      summary: Удаление робота-пылесоса по ID
      description: Удаление робота-пылесоса из базы данных
      operationId: delete_robot
      parameters:
      - name: robotId
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: robotId
        in: path
        description: ID - идентификатор робота-пылесоса
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid Robot value
      x-openapi-router-controller: swagger_server.controllers.robot_controller
  /Schedule:
    put:
      tags:
      - Schedule
      summary: Обновление расписания уборки
      description: Обновление расписания в базе данных
      operationId: update_schedule
      requestBody:
        description: Обновление расписания в базе данных
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/xml:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule'
        "400":
          description: Invalid ID supplied
        "404":
          description: Schedule not found
        "405":
          description: Validation exception
      x-openapi-router-controller: swagger_server.controllers.schedule_controller
    post:
      tags:
      - Schedule
      summary: Добавление расписания
      description: Добавление расписания в базу данных
      operationId: add_schedule
      requestBody:
        description: Добавление расписания в базу данных
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/xml:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule'
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.schedule_controller
  /Schedule/findById/{Id}:
    get:
      tags:
      - Schedule
      summary: Поиск расписания по ID
      description: Поиск расписания в базе данных
      operationId: get_schedule_by_id
      parameters:
      - name: Id
        in: path
        description: ID - идентификатор пользователя
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
            application/xml:
              schema:
                $ref: '#/components/schemas/Schedule'
        "400":
          description: Invalid ID supplied
        "404":
          description: Schedule not found
      x-openapi-router-controller: swagger_server.controllers.schedule_controller
  /Schedule/deleteById/{Id}:
    delete:
      tags:
      - Schedule
      summary: Удаление расписания по ID
      description: Удаление расписания из базы данных
      operationId: delete_schedule
      parameters:
      - name: Id
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: ID - идентификатор расписания
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid Schedule value
      x-openapi-router-controller: swagger_server.controllers.schedule_controller
components:
  schemas:
    User:
      required:
      - email
      - passHash
      - robotSNHash
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        email:
          type: string
          example: somemail@mail.ru
        passHash:
          type: integer
          format: int64
          example: 23412
        robotSNHash:
          type: integer
          format: int64
          example: 23412
      example:
        robotSNHash: 23412
        id: 10
        passHash: 23412
        email: somemail@mail.ru
      xml:
        name: pet
    Group:
      required:
      - userId
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        userId:
          type: integer
          format: int64
          example: 10
      example:
        id: 10
        userId: 10
      xml:
        name: Group
    Schedule:
      required:
      - dateTime
      - mode
      - robotId
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        dateTime:
          type: string
          example: dd.mm.yyyy-hh:mm:ss
        mode:
          type: integer
          format: int64
          example: 10
        robotId:
          type: integer
          format: int64
          example: 10
      example:
        dateTime: dd.mm.yyyy-hh:mm:ss
        mode: 10
        id: 10
        robotId: 10
      xml:
        name: Schedule
    Robot:
      required:
      - charge
      - garbageContainer
      - groupId
      - ipAddress
      - model
      - nextService
      - robotPollution
      - serialNumber
      - version
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        model:
          type: string
          example: something
        version:
          type: string
          example: something
        charge:
          type: integer
          format: int64
          example: 10
        garbageContainer:
          type: integer
          format: int64
          example: 10
        robotPollution:
          type: integer
          format: int64
          example: 10
        nextService:
          type: integer
          format: int64
          example: 10
        serialNumber:
          type: string
          example: something
        ipAddress:
          type: integer
          format: int64
          example: 10
        groupId:
          type: integer
          format: int64
          example: 10
      example:
        charge: 10
        serialNumber: something
        nextService: 10
        groupId: 10
        ipAddress: 10
        model: something
        id: 10
        garbageContainer: 10
        version: something
        robotPollution: 10
      xml:
        name: Robot
  requestBodies:
    User:
      description: Пользователь
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/xml:
          schema:
            $ref: '#/components/schemas/User'
    UserArray:
      description: Список пользователей
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
    Group:
      description: Группа пользователей
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Group'
        application/xml:
          schema:
            $ref: '#/components/schemas/Group'
    GroupArray:
      description: Список групп
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Group'
    Robot:
      description: Робот-пылесос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Robot'
        application/xml:
          schema:
            $ref: '#/components/schemas/Robot'
    RobotArray:
      description: Список роботов-пылесосов
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Robot'
    Schedule:
      description: Расписание уборки
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Schedule'
        application/xml:
          schema:
            $ref: '#/components/schemas/Schedule'
    ScheduleArray:
      description: Список расписаний
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Schedule'

